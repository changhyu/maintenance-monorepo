name: Cache Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/api/src/core/cache/**'
      - 'packages/api/tests/core/cache/**'
      - 'packages/api/Dockerfile'
      - '.github/workflows/cache-service.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/api/src/core/cache/**'
      - 'packages/api/tests/core/cache/**'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Run tests
      run: |
        poetry run pytest packages/api/tests/core/cache/
        
    - name: Run type checks
      run: |
        poetry run mypy packages/api/src/core/cache/

    - name: Run linting
      run: |
        poetry run ruff check packages/api/src/core/cache/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: packages/api
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/cache-service:latest
          ghcr.io/${{ github.repository }}/cache-service:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          docker pull ghcr.io/${{ github.repository }}/cache-service:${{ github.sha }}
          docker compose up -d cache-service 