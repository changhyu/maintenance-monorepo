# Build stage
FROM node:18-alpine as builder
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
WORKDIR /app
# Install dependencies
COPY package.json package-lock.json ./
RUN npm install --production
# Copy source code and build
COPY . ./
RUN npm run build

# Production stage
FROM nginx:1.23-alpine
# 비루트 사용자 생성
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Nginx 설정 복사 및 권한 설정
COPY --from=builder /app/build /usr/share/nginx/html
RUN chown -R appuser:appgroup /usr/share/nginx/html

# Nginx 설정 추가 (비루트 사용자가 사용할 수 있도록)
COPY nginx.conf /etc/nginx/conf.d/default.conf
RUN touch /var/run/nginx.pid && \
    chown -R appuser:appgroup /var/run/nginx.pid && \
    chown -R appuser:appgroup /var/cache/nginx

# 비루트 사용자로 전환
USER appuser

# 보안 헬스체크 추가
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget -q --spider http://localhost:80/ || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
